"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
exports.__esModule = true;
exports.initialize = exports.extractExample = exports.fetchExampleList = void 0;
var fs_1 = __importDefault(require("fs"));
var ora_1 = __importDefault(require("ora"));
var pacote_1 = __importDefault(require("pacote"));
var inquires = __importStar(require("../utils/inquires"));
var logger_1 = require("../utils/logger");
var errors_1 = require("../utils/errors");
var NPM_SSC = '@securityscorecard/';
var CLI_MANIFEST = NPM_SSC + "cli-manifest";
var fetchExampleList = function () { return __awaiter(void 0, void 0, void 0, function () {
    var exampleList, operation, spinner, response, e_1;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                exampleList = [];
                operation = 'Fetching examples';
                spinner = (0, ora_1["default"])(operation).start();
                _a.label = 1;
            case 1:
                _a.trys.push([1, 3, , 4]);
                return [4 /*yield*/, pacote_1["default"].manifest(CLI_MANIFEST, {
                        fullMetadata: true
                    })];
            case 2:
                response = (_a.sent());
                exampleList = __spreadArray(__spreadArray([], response === null || response === void 0 ? void 0 : response.apps.experiments, true), response === null || response === void 0 ? void 0 : response.apps.examples, true);
                spinner.succeed(operation);
                return [3 /*break*/, 4];
            case 3:
                e_1 = _a.sent();
                spinner.fail(operation);
                (0, logger_1.log)((0, logger_1.error)('Could not fetch example list'));
                throw new errors_1.CLIError('Could not fetch example list');
            case 4: return [2 /*return*/, exampleList];
        }
    });
}); };
exports.fetchExampleList = fetchExampleList;
var stepsToFollow = function (folder) {
    (0, logger_1.log)((0, logger_1.info)('\nðŸŽ‰ Now you are able to open your project, run:', "\n $ cd " + folder));
    (0, logger_1.log)((0, logger_1.info)('\nAlso, you could follow the installation steps:', '\nhttps://securityscorecard.readme.io/docs/creating-an-app'));
};
var extractExample = function (_a) {
    var path = _a.path, name = _a.name, folder = _a.folder;
    return __awaiter(void 0, void 0, void 0, function () {
        var operation, spinner, e_2;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    operation = "Extracting example " + name + " into " + folder;
                    spinner = (0, ora_1["default"])(operation).start();
                    _b.label = 1;
                case 1:
                    _b.trys.push([1, 4, , 5]);
                    // if manifest not found then the package does not exists
                    return [4 /*yield*/, pacote_1["default"].manifest(path)];
                case 2:
                    // if manifest not found then the package does not exists
                    _b.sent();
                    // this prevents the extract to create a folder before throwing
                    // since pacote wont rimraf on extract failing
                    return [4 /*yield*/, pacote_1["default"].extract(path, folder)];
                case 3:
                    // this prevents the extract to create a folder before throwing
                    // since pacote wont rimraf on extract failing
                    _b.sent();
                    spinner.succeed(operation);
                    stepsToFollow(folder);
                    return [3 /*break*/, 5];
                case 4:
                    e_2 = _b.sent();
                    spinner.fail(operation);
                    (0, logger_1.log)((0, logger_1.error)('Could not extract example'));
                    throw new errors_1.CLIError('Could not extract example', [e_2]);
                case 5: return [2 /*return*/];
            }
        });
    });
};
exports.extractExample = extractExample;
var choseExample = function () { return __awaiter(void 0, void 0, void 0, function () {
    var examples, answer;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, (0, exports.fetchExampleList)()];
            case 1:
                examples = (_a.sent());
                (0, logger_1.log)((0, logger_1.details)(examples.length + " examples found"));
                return [4 /*yield*/, inquires.askExampleSelection(examples)];
            case 2:
                answer = _a.sent();
                return [2 /*return*/, answer.example];
        }
    });
}); };
var initialize = function (args) { return __awaiter(void 0, void 0, void 0, function () {
    var exampleName, _a, path, folderName, folderExists, isOverriding, _b;
    return __generator(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = (args === null || args === void 0 ? void 0 : args.example);
                if (_a) return [3 /*break*/, 2];
                return [4 /*yield*/, choseExample()];
            case 1:
                _a = (_c.sent());
                _c.label = 2;
            case 2:
                exampleName = _a;
                (0, logger_1.log)((0, logger_1.info)('\nInitializing example:'), exampleName);
                path = "" + NPM_SSC + exampleName;
                folderName = args.folder || exampleName;
                folderExists = fs_1["default"].existsSync(folderName);
                _b = folderExists;
                if (!_b) return [3 /*break*/, 4];
                return [4 /*yield*/, inquires.askExtractionOverride(folderName)];
            case 3:
                _b = (_c.sent());
                _c.label = 4;
            case 4:
                isOverriding = _b;
                if (!(!folderExists || isOverriding)) return [3 /*break*/, 6];
                return [4 /*yield*/, (0, exports.extractExample)({ path: path, name: exampleName, folder: folderName })];
            case 5:
                _c.sent();
                return [3 /*break*/, 7];
            case 6:
                (0, logger_1.log)((0, logger_1.info)('Remember you could always:'), 'ssc init -f <folder_name>');
                _c.label = 7;
            case 7: return [2 /*return*/];
        }
    });
}); };
exports.initialize = initialize;
