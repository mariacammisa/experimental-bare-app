"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
exports.__esModule = true;
var commander_1 = require("commander");
var logger_1 = require("./utils/logger");
var initialize_1 = require("./commands/initialize");
var configure_1 = __importDefault(require("./commands/configure"));
var install_1 = __importDefault(require("./commands/install"));
var validate_1 = __importDefault(require("./commands/validate"));
var simulate_1 = __importDefault(require("./commands/simulate"));
commander_1.program.version('0.0.1');
(0, logger_1.log)((0, logger_1.title)('SecurityScorecard'));
commander_1.program
    .command('init')
    .description('choose your example to begin with')
    .option('-e, --example [value]', 'Example Name')
    .option('-f, --folder [value]', 'Extraction Folder')
    .action(initialize_1.initialize);
commander_1.program
    .command('config')
    .description('set your SecurityScorecard credentials')
    .option('--no-environment', 'no environment selected')
    .option('-t, --token [value]', 'API Token')
    .action(configure_1["default"]);
commander_1.program
    .command('install')
    .description('install your app on the marketplace')
    .option('--no-environment', 'no environment selected')
    .option('-u, --url [value]', 'URL where manifest is published')
    .action(install_1["default"]);
commander_1.program
    .command('validate')
    .description('validate your app manifest on the marketplace')
    .option('--no-environment', 'no environment selected')
    .option('-u, --url [value]', 'URL where manifest is published')
    .action(validate_1["default"]);
commander_1.program
    .command('simulate-event')
    .description('simulate any event')
    .option('--no-environment', 'no environment selected')
    .option('-f, --file [path]', 'path of the file containing the event payload')
    .action(simulate_1["default"]);
commander_1.program.parse(process.argv);
