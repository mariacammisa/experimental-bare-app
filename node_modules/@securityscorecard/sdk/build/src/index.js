"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
exports.__esModule = true;
exports.SSC = exports.API_HOST_NAMES = void 0;
var modules_1 = __importDefault(require("./modules"));
var api_1 = __importDefault(require("./api"));
var configs_1 = __importDefault(require("./configs"));
var utils_1 = require("./utils");
// eslint-disable-next-line no-shadow
exports.API_HOST_NAMES = {
    production: 'https://platform-api.securityscorecard.io',
    testing: 'https://platform-api.securityscorecard.qa',
    development: 'https://platform-api.securityscorecard.tech'
};
var normalizeHost = function (host) {
    // check if its one of known hosts
    var knownHost = exports.API_HOST_NAMES[host];
    try {
        var normalizedHost = (0, utils_1.normalizeUrl)(knownHost || host);
        return normalizedHost;
    }
    catch (error) {
        throw new Error("please provide a valid host either [" + Object.keys(exports.API_HOST_NAMES) + "] or any valid url.");
    }
};
function SSC(config) {
    if (config === void 0) { config = {}; }
    var token = config.token || configs_1["default"].token;
    if (!token)
        throw new Error('must provide an api token, or have one set as environment variable "SSC_API_TOKEN"');
    var host = normalizeHost(config.host || configs_1["default"].host || 'production');
    // Create an api to interact with securityscorecard
    var api = new api_1["default"](token, {
        host: host
    });
    // Initialize modules
    var apps = modules_1["default"].Apps(api);
    var subscriptions = modules_1["default"].Subscriptions(api);
    var events = modules_1["default"].Events(api);
    return {
        api: api,
        apps: apps,
        events: events,
        subscriptions: subscriptions
    };
}
exports.SSC = SSC;
//# sourceMappingURL=index.js.map